/*
 * Treezor
 * Treezor API.  more info [here](https://www.treezor.com). 
 *
 * OpenAPI spec version: 0.1.1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.26
 *
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Treezor);
  }
}(this, function(expect, Treezor) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new Treezor.CardApi();
  });

  describe('(package)', function() {
    describe('CardApi', function() {
      describe('cardimagesGet', function() {
        it('should call cardimagesGet successfully', function(done) {
          // TODO: uncomment, update parameter values for cardimagesGet call and complete the assertions
          /*
          var opts = {};

          instance.cardimagesGet(cardId, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(Treezor.InlineResponse2007);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('cardsCreateVirtualPost', function() {
        it('should call cardsCreateVirtualPost successfully', function(done) {
          // TODO: uncomment, update parameter values for cardsCreateVirtualPost call and complete the assertions
          /*
          var opts = {};

          instance.cardsCreateVirtualPost(userId, walletId, permsGroup, cardPrint, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(Treezor.InlineResponse2006);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('cardsGet', function() {
        it('should call cardsGet successfully', function(done) {
          // TODO: uncomment, update parameter values for cardsGet call and complete the assertions
          /*
          var opts = {};

          instance.cardsGet(opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(Treezor.InlineResponse2006);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('cardsIdActivatePut', function() {
        it('should call cardsIdActivatePut successfully', function(done) {
          // TODO: uncomment, update parameter values for cardsIdActivatePut call and complete the assertions
          /*
          var opts = {};

          instance.cardsIdActivatePut(id, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(Treezor.InlineResponse2006);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('cardsIdChangePINPut', function() {
        it('should call cardsIdChangePINPut successfully', function(done) {
          // TODO: uncomment, update parameter values for cardsIdChangePINPut call and complete the assertions
          /*
          var opts = {};

          instance.cardsIdChangePINPut(id, currentPIN, newPIN, confirmPIN, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(Treezor.InlineResponse2006);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('cardsIdConvertVirtualPut', function() {
        it('should call cardsIdConvertVirtualPut successfully', function(done) {
          // TODO: uncomment, update parameter values for cardsIdConvertVirtualPut call and complete the assertions
          /*
          var opts = {};

          instance.cardsIdConvertVirtualPut(id, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(Treezor.InlineResponse2006);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('cardsIdGet', function() {
        it('should call cardsIdGet successfully', function(done) {
          // TODO: uncomment, update parameter values for cardsIdGet call and complete the assertions
          /*

          instance.cardsIdGet(id, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(Treezor.InlineResponse2006);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('cardsIdLimitsPut', function() {
        it('should call cardsIdLimitsPut successfully', function(done) {
          // TODO: uncomment, update parameter values for cardsIdLimitsPut call and complete the assertions
          /*
          var opts = {};

          instance.cardsIdLimitsPut(id, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(Treezor.InlineResponse2006);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('cardsIdLockUnlockPut', function() {
        it('should call cardsIdLockUnlockPut successfully', function(done) {
          // TODO: uncomment, update parameter values for cardsIdLockUnlockPut call and complete the assertions
          /*
          var opts = {};

          instance.cardsIdLockUnlockPut(id, lockStatus, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(Treezor.InlineResponse2006);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('cardsIdOptionsPut', function() {
        it('should call cardsIdOptionsPut successfully', function(done) {
          // TODO: uncomment, update parameter values for cardsIdOptionsPut call and complete the assertions
          /*
          var opts = {};

          instance.cardsIdOptionsPut(id, foreign, online, atm, nfc, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(Treezor.InlineResponse2006);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('cardsIdPut', function() {
        it('should call cardsIdPut successfully', function(done) {
          // TODO: uncomment, update parameter values for cardsIdPut call and complete the assertions
          /*
          var opts = {};

          instance.cardsIdPut(id, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(Treezor.InlineResponse2006);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('cardsIdRegeneratePut', function() {
        it('should call cardsIdRegeneratePut successfully', function(done) {
          // TODO: uncomment, update parameter values for cardsIdRegeneratePut call and complete the assertions
          /*
          var opts = {};

          instance.cardsIdRegeneratePut(id, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(Treezor.InlineResponse2006);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('cardsIdSetPINPut', function() {
        it('should call cardsIdSetPINPut successfully', function(done) {
          // TODO: uncomment, update parameter values for cardsIdSetPINPut call and complete the assertions
          /*
          var opts = {};

          instance.cardsIdSetPINPut(id, newPIN, confirmPIN, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(Treezor.InlineResponse2006);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('cardsIdUnblockPINPut', function() {
        it('should call cardsIdUnblockPINPut successfully', function(done) {
          // TODO: uncomment, update parameter values for cardsIdUnblockPINPut call and complete the assertions
          /*
          var opts = {};

          instance.cardsIdUnblockPINPut(id, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(Treezor.InlineResponse2006);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('cardsRegister3DSPost', function() {
        it('should call cardsRegister3DSPost successfully', function(done) {
          // TODO: uncomment, update parameter values for cardsRegister3DSPost call and complete the assertions
          /*
          var opts = {};

          instance.cardsRegister3DSPost(cardId, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(Treezor.InlineResponse2006);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('cardsRequestPhysicalPost', function() {
        it('should call cardsRequestPhysicalPost successfully', function(done) {
          // TODO: uncomment, update parameter values for cardsRequestPhysicalPost call and complete the assertions
          /*
          var opts = {};

          instance.cardsRequestPhysicalPost(userId, walletId, permsGroup, cardTag, cardPrint, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(Treezor.InlineResponse2006);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
    });
  });

}));
