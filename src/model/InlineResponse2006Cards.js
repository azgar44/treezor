/*
 * Treezor
 * Treezor API.  more info [here](https://www.treezor.com). 
 *
 * OpenAPI spec version: 0.1.1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.26
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';
import {InlineResponse2006RestrictionGroupLimits} from './InlineResponse2006RestrictionGroupLimits';

/**
 * The InlineResponse2006Cards model module.
 * @module model/InlineResponse2006Cards
 * @version 0.1.1
 */
export class InlineResponse2006Cards {
  /**
   * Constructs a new <code>InlineResponse2006Cards</code>.
   * @alias module:model/InlineResponse2006Cards
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>InlineResponse2006Cards</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/InlineResponse2006Cards} obj Optional instance to populate.
   * @return {module:model/InlineResponse2006Cards} The populated <code>InlineResponse2006Cards</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new InlineResponse2006Cards();
      if (data.hasOwnProperty('cardId'))
        obj.cardId = ApiClient.convertToType(data['cardId'], 'Number');
      if (data.hasOwnProperty('userId'))
        obj.userId = ApiClient.convertToType(data['userId'], 'Number');
      if (data.hasOwnProperty('walletId'))
        obj.walletId = ApiClient.convertToType(data['walletId'], 'Number');
      if (data.hasOwnProperty('walletCardtransactionId'))
        obj.walletCardtransactionId = ApiClient.convertToType(data['walletCardtransactionId'], 'Number');
      if (data.hasOwnProperty('mccRestrictionGroupId'))
        obj.mccRestrictionGroupId = ApiClient.convertToType(data['mccRestrictionGroupId'], 'Number');
      if (data.hasOwnProperty('merchantRestrictionGroupId'))
        obj.merchantRestrictionGroupId = ApiClient.convertToType(data['merchantRestrictionGroupId'], 'Number');
      if (data.hasOwnProperty('countryRestrictionGroupId'))
        obj.countryRestrictionGroupId = ApiClient.convertToType(data['countryRestrictionGroupId'], 'Number');
      if (data.hasOwnProperty('publicToken'))
        obj.publicToken = ApiClient.convertToType(data['publicToken'], 'String');
      if (data.hasOwnProperty('cardTag'))
        obj.cardTag = ApiClient.convertToType(data['cardTag'], 'String');
      if (data.hasOwnProperty('statusCode'))
        obj.statusCode = ApiClient.convertToType(data['statusCode'], 'String');
      if (data.hasOwnProperty('isLive'))
        obj.isLive = ApiClient.convertToType(data['isLive'], 'Number');
      if (data.hasOwnProperty('pinTryExceeds'))
        obj.pinTryExceeds = ApiClient.convertToType(data['pinTryExceeds'], 'Number');
      if (data.hasOwnProperty('maskedPan'))
        obj.maskedPan = ApiClient.convertToType(data['maskedPan'], 'Number');
      if (data.hasOwnProperty('embossedName'))
        obj.embossedName = ApiClient.convertToType(data['embossedName'], 'String');
      if (data.hasOwnProperty('expiryDate'))
        obj.expiryDate = ApiClient.convertToType(data['expiryDate'], 'String');
      if (data.hasOwnProperty('CVV'))
        obj.CVV = ApiClient.convertToType(data['CVV'], 'String');
      if (data.hasOwnProperty('startDate'))
        obj.startDate = ApiClient.convertToType(data['startDate'], 'String');
      if (data.hasOwnProperty('endDate'))
        obj.endDate = ApiClient.convertToType(data['endDate'], 'String');
      if (data.hasOwnProperty('countryCode'))
        obj.countryCode = ApiClient.convertToType(data['countryCode'], 'String');
      if (data.hasOwnProperty('currencyCode'))
        obj.currencyCode = ApiClient.convertToType(data['currencyCode'], 'String');
      if (data.hasOwnProperty('lang'))
        obj.lang = ApiClient.convertToType(data['lang'], 'String');
      if (data.hasOwnProperty('deliveryTitle'))
        obj.deliveryTitle = ApiClient.convertToType(data['deliveryTitle'], 'String');
      if (data.hasOwnProperty('deliveryLastname'))
        obj.deliveryLastname = ApiClient.convertToType(data['deliveryLastname'], 'String');
      if (data.hasOwnProperty('deliveryFirstname'))
        obj.deliveryFirstname = ApiClient.convertToType(data['deliveryFirstname'], 'String');
      if (data.hasOwnProperty('deliveryAddress1'))
        obj.deliveryAddress1 = ApiClient.convertToType(data['deliveryAddress1'], 'String');
      if (data.hasOwnProperty('deliveryAddress2'))
        obj.deliveryAddress2 = ApiClient.convertToType(data['deliveryAddress2'], 'String');
      if (data.hasOwnProperty('deliveryAddress3'))
        obj.deliveryAddress3 = ApiClient.convertToType(data['deliveryAddress3'], 'String');
      if (data.hasOwnProperty('deliveryCity'))
        obj.deliveryCity = ApiClient.convertToType(data['deliveryCity'], 'String');
      if (data.hasOwnProperty('deliveryPostcode'))
        obj.deliveryPostcode = ApiClient.convertToType(data['deliveryPostcode'], 'String');
      if (data.hasOwnProperty('deliveryCountry'))
        obj.deliveryCountry = ApiClient.convertToType(data['deliveryCountry'], 'String');
      if (data.hasOwnProperty('mobileSent'))
        obj.mobileSent = ApiClient.convertToType(data['mobileSent'], 'String');
      if (data.hasOwnProperty('limitsGroup'))
        obj.limitsGroup = ApiClient.convertToType(data['limitsGroup'], 'String');
      if (data.hasOwnProperty('permsGroup'))
        obj.permsGroup = ApiClient.convertToType(data['permsGroup'], 'String');
      if (data.hasOwnProperty('cardDesign'))
        obj.cardDesign = ApiClient.convertToType(data['cardDesign'], 'String');
      if (data.hasOwnProperty('virtualConverted'))
        obj.virtualConverted = ApiClient.convertToType(data['virtualConverted'], 'Number');
      if (data.hasOwnProperty('optionAtm'))
        obj.optionAtm = ApiClient.convertToType(data['optionAtm'], 'Number');
      if (data.hasOwnProperty('optionForeign'))
        obj.optionForeign = ApiClient.convertToType(data['optionForeign'], 'Number');
      if (data.hasOwnProperty('optionOnline'))
        obj.optionOnline = ApiClient.convertToType(data['optionOnline'], 'Number');
      if (data.hasOwnProperty('optionNfc'))
        obj.optionNfc = ApiClient.convertToType(data['optionNfc'], 'Number');
      if (data.hasOwnProperty('limitAtmYear'))
        obj.limitAtmYear = ApiClient.convertToType(data['limitAtmYear'], 'Number');
      if (data.hasOwnProperty('limitAtmMonth'))
        obj.limitAtmMonth = ApiClient.convertToType(data['limitAtmMonth'], 'Number');
      if (data.hasOwnProperty('limitAtmWeek'))
        obj.limitAtmWeek = ApiClient.convertToType(data['limitAtmWeek'], 'Number');
      if (data.hasOwnProperty('limitAtmDay'))
        obj.limitAtmDay = ApiClient.convertToType(data['limitAtmDay'], 'Number');
      if (data.hasOwnProperty('limitAtmAll'))
        obj.limitAtmAll = ApiClient.convertToType(data['limitAtmAll'], 'Number');
      if (data.hasOwnProperty('limitPaymentYear'))
        obj.limitPaymentYear = ApiClient.convertToType(data['limitPaymentYear'], 'Number');
      if (data.hasOwnProperty('limitPaymentMonth'))
        obj.limitPaymentMonth = ApiClient.convertToType(data['limitPaymentMonth'], 'Number');
      if (data.hasOwnProperty('limitPaymentWeek'))
        obj.limitPaymentWeek = ApiClient.convertToType(data['limitPaymentWeek'], 'Number');
      if (data.hasOwnProperty('limitPaymentDay'))
        obj.limitPaymentDay = ApiClient.convertToType(data['limitPaymentDay'], 'Number');
      if (data.hasOwnProperty('limitPaymentAll'))
        obj.limitPaymentAll = ApiClient.convertToType(data['limitPaymentAll'], 'Number');
      if (data.hasOwnProperty('paymentDailyLimit'))
        obj.paymentDailyLimit = ApiClient.convertToType(data['paymentDailyLimit'], 'Number');
      if (data.hasOwnProperty('restrictionGroupLimits'))
        obj.restrictionGroupLimits = ApiClient.convertToType(data['restrictionGroupLimits'], [InlineResponse2006RestrictionGroupLimits]);
      if (data.hasOwnProperty('totalAtmYear'))
        obj.totalAtmYear = ApiClient.convertToType(data['totalAtmYear'], 'Number');
      if (data.hasOwnProperty('totalAtmMonth'))
        obj.totalAtmMonth = ApiClient.convertToType(data['totalAtmMonth'], 'Number');
      if (data.hasOwnProperty('totalAtmWeek'))
        obj.totalAtmWeek = ApiClient.convertToType(data['totalAtmWeek'], 'Number');
      if (data.hasOwnProperty('totalAtmDay'))
        obj.totalAtmDay = ApiClient.convertToType(data['totalAtmDay'], 'Number');
      if (data.hasOwnProperty('totalAtmAll'))
        obj.totalAtmAll = ApiClient.convertToType(data['totalAtmAll'], 'Number');
      if (data.hasOwnProperty('totalPaymentYear'))
        obj.totalPaymentYear = ApiClient.convertToType(data['totalPaymentYear'], 'Number');
      if (data.hasOwnProperty('totalPaymentMonth'))
        obj.totalPaymentMonth = ApiClient.convertToType(data['totalPaymentMonth'], 'Number');
      if (data.hasOwnProperty('totalPaymentWeek'))
        obj.totalPaymentWeek = ApiClient.convertToType(data['totalPaymentWeek'], 'Number');
      if (data.hasOwnProperty('totalPaymentDay'))
        obj.totalPaymentDay = ApiClient.convertToType(data['totalPaymentDay'], 'Number');
      if (data.hasOwnProperty('totalPaymentAll'))
        obj.totalPaymentAll = ApiClient.convertToType(data['totalPaymentAll'], 'Number');
      if (data.hasOwnProperty('createdBy'))
        obj.createdBy = ApiClient.convertToType(data['createdBy'], 'Number');
      if (data.hasOwnProperty('createdDate'))
        obj.createdDate = ApiClient.convertToType(data['createdDate'], 'String');
      if (data.hasOwnProperty('modifiedBy'))
        obj.modifiedBy = ApiClient.convertToType(data['modifiedBy'], 'Number');
      if (data.hasOwnProperty('modifiedDate'))
        obj.modifiedDate = ApiClient.convertToType(data['modifiedDate'], 'String');
      if (data.hasOwnProperty('totalRows'))
        obj.totalRows = ApiClient.convertToType(data['totalRows'], 'Number');
    }
    return obj;
  }
}

/**
 * @member {Number} cardId
 */
InlineResponse2006Cards.prototype.cardId = undefined;

/**
 * @member {Number} userId
 */
InlineResponse2006Cards.prototype.userId = undefined;

/**
 * @member {Number} walletId
 */
InlineResponse2006Cards.prototype.walletId = undefined;

/**
 * @member {Number} walletCardtransactionId
 */
InlineResponse2006Cards.prototype.walletCardtransactionId = undefined;

/**
 * @member {Number} mccRestrictionGroupId
 */
InlineResponse2006Cards.prototype.mccRestrictionGroupId = undefined;

/**
 * @member {Number} merchantRestrictionGroupId
 */
InlineResponse2006Cards.prototype.merchantRestrictionGroupId = undefined;

/**
 * @member {Number} countryRestrictionGroupId
 */
InlineResponse2006Cards.prototype.countryRestrictionGroupId = undefined;

/**
 * @member {String} publicToken
 */
InlineResponse2006Cards.prototype.publicToken = undefined;

/**
 * @member {String} cardTag
 */
InlineResponse2006Cards.prototype.cardTag = undefined;

/**
 * Allowed values for the <code>statusCode</code> property.
 * @enum {String}
 * @readonly
 */
InlineResponse2006Cards.StatusCodeEnum = {
  /**
   * value: "UNLOCK"
   * @const
   */
  UNLOCK: "UNLOCK",

  /**
   * value: "LOCK"
   * @const
   */
  LOCK: "LOCK",

  /**
   * value: "LOST"
   * @const
   */
  LOST: "LOST",

  /**
   * value: "STOLEN"
   * @const
   */
  STOLEN: "STOLEN"
};
/**
 * @member {module:model/InlineResponse2006Cards.StatusCodeEnum} statusCode
 */
InlineResponse2006Cards.prototype.statusCode = undefined;

/**
 * @member {Number} isLive
 */
InlineResponse2006Cards.prototype.isLive = undefined;

/**
 * @member {Number} pinTryExceeds
 */
InlineResponse2006Cards.prototype.pinTryExceeds = undefined;

/**
 * @member {Number} maskedPan
 */
InlineResponse2006Cards.prototype.maskedPan = undefined;

/**
 * @member {String} embossedName
 */
InlineResponse2006Cards.prototype.embossedName = undefined;

/**
 * Date YYYY-MM-DD
 * @member {String} expiryDate
 */
InlineResponse2006Cards.prototype.expiryDate = undefined;

/**
 * @member {String} CVV
 */
InlineResponse2006Cards.prototype.CVV = undefined;

/**
 * Date YYYY-MM-DD
 * @member {String} startDate
 */
InlineResponse2006Cards.prototype.startDate = undefined;

/**
 * Date YYYY-MM-DD
 * @member {String} endDate
 */
InlineResponse2006Cards.prototype.endDate = undefined;

/**
 * @member {String} countryCode
 */
InlineResponse2006Cards.prototype.countryCode = undefined;

/**
 * @member {String} currencyCode
 */
InlineResponse2006Cards.prototype.currencyCode = undefined;

/**
 * @member {String} lang
 */
InlineResponse2006Cards.prototype.lang = undefined;

/**
 * @member {String} deliveryTitle
 */
InlineResponse2006Cards.prototype.deliveryTitle = undefined;

/**
 * @member {String} deliveryLastname
 */
InlineResponse2006Cards.prototype.deliveryLastname = undefined;

/**
 * @member {String} deliveryFirstname
 */
InlineResponse2006Cards.prototype.deliveryFirstname = undefined;

/**
 * @member {String} deliveryAddress1
 */
InlineResponse2006Cards.prototype.deliveryAddress1 = undefined;

/**
 * @member {String} deliveryAddress2
 */
InlineResponse2006Cards.prototype.deliveryAddress2 = undefined;

/**
 * @member {String} deliveryAddress3
 */
InlineResponse2006Cards.prototype.deliveryAddress3 = undefined;

/**
 * @member {String} deliveryCity
 */
InlineResponse2006Cards.prototype.deliveryCity = undefined;

/**
 * @member {String} deliveryPostcode
 */
InlineResponse2006Cards.prototype.deliveryPostcode = undefined;

/**
 * @member {String} deliveryCountry
 */
InlineResponse2006Cards.prototype.deliveryCountry = undefined;

/**
 * @member {String} mobileSent
 */
InlineResponse2006Cards.prototype.mobileSent = undefined;

/**
 * @member {String} limitsGroup
 */
InlineResponse2006Cards.prototype.limitsGroup = undefined;

/**
 * @member {String} permsGroup
 */
InlineResponse2006Cards.prototype.permsGroup = undefined;

/**
 * @member {String} cardDesign
 */
InlineResponse2006Cards.prototype.cardDesign = undefined;

/**
 * @member {Number} virtualConverted
 */
InlineResponse2006Cards.prototype.virtualConverted = undefined;

/**
 * @member {Number} optionAtm
 */
InlineResponse2006Cards.prototype.optionAtm = undefined;

/**
 * @member {Number} optionForeign
 */
InlineResponse2006Cards.prototype.optionForeign = undefined;

/**
 * @member {Number} optionOnline
 */
InlineResponse2006Cards.prototype.optionOnline = undefined;

/**
 * @member {Number} optionNfc
 */
InlineResponse2006Cards.prototype.optionNfc = undefined;

/**
 * @member {Number} limitAtmYear
 */
InlineResponse2006Cards.prototype.limitAtmYear = undefined;

/**
 * @member {Number} limitAtmMonth
 */
InlineResponse2006Cards.prototype.limitAtmMonth = undefined;

/**
 * @member {Number} limitAtmWeek
 */
InlineResponse2006Cards.prototype.limitAtmWeek = undefined;

/**
 * @member {Number} limitAtmDay
 */
InlineResponse2006Cards.prototype.limitAtmDay = undefined;

/**
 * @member {Number} limitAtmAll
 */
InlineResponse2006Cards.prototype.limitAtmAll = undefined;

/**
 * @member {Number} limitPaymentYear
 */
InlineResponse2006Cards.prototype.limitPaymentYear = undefined;

/**
 * @member {Number} limitPaymentMonth
 */
InlineResponse2006Cards.prototype.limitPaymentMonth = undefined;

/**
 * @member {Number} limitPaymentWeek
 */
InlineResponse2006Cards.prototype.limitPaymentWeek = undefined;

/**
 * @member {Number} limitPaymentDay
 */
InlineResponse2006Cards.prototype.limitPaymentDay = undefined;

/**
 * @member {Number} limitPaymentAll
 */
InlineResponse2006Cards.prototype.limitPaymentAll = undefined;

/**
 * @member {Number} paymentDailyLimit
 */
InlineResponse2006Cards.prototype.paymentDailyLimit = undefined;

/**
 * @member {Array.<module:model/InlineResponse2006RestrictionGroupLimits>} restrictionGroupLimits
 */
InlineResponse2006Cards.prototype.restrictionGroupLimits = undefined;

/**
 * @member {Number} totalAtmYear
 */
InlineResponse2006Cards.prototype.totalAtmYear = undefined;

/**
 * @member {Number} totalAtmMonth
 */
InlineResponse2006Cards.prototype.totalAtmMonth = undefined;

/**
 * @member {Number} totalAtmWeek
 */
InlineResponse2006Cards.prototype.totalAtmWeek = undefined;

/**
 * @member {Number} totalAtmDay
 */
InlineResponse2006Cards.prototype.totalAtmDay = undefined;

/**
 * @member {Number} totalAtmAll
 */
InlineResponse2006Cards.prototype.totalAtmAll = undefined;

/**
 * @member {Number} totalPaymentYear
 */
InlineResponse2006Cards.prototype.totalPaymentYear = undefined;

/**
 * @member {Number} totalPaymentMonth
 */
InlineResponse2006Cards.prototype.totalPaymentMonth = undefined;

/**
 * @member {Number} totalPaymentWeek
 */
InlineResponse2006Cards.prototype.totalPaymentWeek = undefined;

/**
 * @member {Number} totalPaymentDay
 */
InlineResponse2006Cards.prototype.totalPaymentDay = undefined;

/**
 * @member {Number} totalPaymentAll
 */
InlineResponse2006Cards.prototype.totalPaymentAll = undefined;

/**
 * @member {Number} createdBy
 */
InlineResponse2006Cards.prototype.createdBy = undefined;

/**
 * Date YYYY-MM-DD HH:MM:SS
 * @member {String} createdDate
 */
InlineResponse2006Cards.prototype.createdDate = undefined;

/**
 * @member {Number} modifiedBy
 */
InlineResponse2006Cards.prototype.modifiedBy = undefined;

/**
 * Date YYYY-MM-DD HH:MM:SS
 * @member {String} modifiedDate
 */
InlineResponse2006Cards.prototype.modifiedDate = undefined;

/**
 * @member {Number} totalRows
 */
InlineResponse2006Cards.prototype.totalRows = undefined;

