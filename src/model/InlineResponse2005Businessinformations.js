/*
 * Treezor
 * Treezor API.  more info [here](https://www.treezor.com). 
 *
 * OpenAPI spec version: 0.1.1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.26
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';
import {InlineResponse2005Users} from './InlineResponse2005Users';

/**
 * The InlineResponse2005Businessinformations model module.
 * @module model/InlineResponse2005Businessinformations
 * @version 0.1.1
 */
export class InlineResponse2005Businessinformations {
  /**
   * Constructs a new <code>InlineResponse2005Businessinformations</code>.
   * @alias module:model/InlineResponse2005Businessinformations
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>InlineResponse2005Businessinformations</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/InlineResponse2005Businessinformations} obj Optional instance to populate.
   * @return {module:model/InlineResponse2005Businessinformations} The populated <code>InlineResponse2005Businessinformations</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new InlineResponse2005Businessinformations();
      if (data.hasOwnProperty('legalName'))
        obj.legalName = ApiClient.convertToType(data['legalName'], 'String');
      if (data.hasOwnProperty('legalRegistrationNumber'))
        obj.legalRegistrationNumber = ApiClient.convertToType(data['legalRegistrationNumber'], 'String');
      if (data.hasOwnProperty('legalRegistrationDate'))
        obj.legalRegistrationDate = ApiClient.convertToType(data['legalRegistrationDate'], 'String');
      if (data.hasOwnProperty('legalForm'))
        obj.legalForm = ApiClient.convertToType(data['legalForm'], 'String');
      if (data.hasOwnProperty('legalShareCapital'))
        obj.legalShareCapital = ApiClient.convertToType(data['legalShareCapital'], 'Number');
      if (data.hasOwnProperty('legalSector'))
        obj.legalSector = ApiClient.convertToType(data['legalSector'], 'String');
      if (data.hasOwnProperty('legalAnnualTurnOver'))
        obj.legalAnnualTurnOver = ApiClient.convertToType(data['legalAnnualTurnOver'], 'String');
      if (data.hasOwnProperty('legalNetIncomeRange'))
        obj.legalNetIncomeRange = ApiClient.convertToType(data['legalNetIncomeRange'], 'String');
      if (data.hasOwnProperty('legalNumberOfEmployeeRange'))
        obj.legalNumberOfEmployeeRange = ApiClient.convertToType(data['legalNumberOfEmployeeRange'], 'String');
      if (data.hasOwnProperty('phone'))
        obj.phone = ApiClient.convertToType(data['phone'], 'String');
      if (data.hasOwnProperty('email'))
        obj.email = ApiClient.convertToType(data['email'], 'String');
      if (data.hasOwnProperty('address1'))
        obj.address1 = ApiClient.convertToType(data['address1'], 'String');
      if (data.hasOwnProperty('postcode'))
        obj.postcode = ApiClient.convertToType(data['postcode'], 'String');
      if (data.hasOwnProperty('city'))
        obj.city = ApiClient.convertToType(data['city'], 'String');
      if (data.hasOwnProperty('state'))
        obj.state = ApiClient.convertToType(data['state'], 'String');
      if (data.hasOwnProperty('country'))
        obj.country = ApiClient.convertToType(data['country'], 'String');
      if (data.hasOwnProperty('status'))
        obj.status = ApiClient.convertToType(data['status'], 'String');
      if (data.hasOwnProperty('tradename'))
        obj.tradename = ApiClient.convertToType(data['tradename'], 'String');
      if (data.hasOwnProperty('users'))
        obj.users = ApiClient.convertToType(data['users'], [InlineResponse2005Users]);
    }
    return obj;
  }
}

/**
 * Business commercial name.
 * @member {String} legalName
 */
InlineResponse2005Businessinformations.prototype.legalName = undefined;

/**
 * Business registration number.
 * @member {String} legalRegistrationNumber
 */
InlineResponse2005Businessinformations.prototype.legalRegistrationNumber = undefined;

/**
 * Business registration date.
 * @member {String} legalRegistrationDate
 */
InlineResponse2005Businessinformations.prototype.legalRegistrationDate = undefined;

/**
 * Allowed values for the <code>legalForm</code> property.
 * @enum {String}
 * @readonly
 */
InlineResponse2005Businessinformations.LegalFormEnum = {
  /**
   * value: "1000"
   * @const
   */
  _1000: "1000",

  /**
   * value: "1100"
   * @const
   */
  _1100: "1100",

  /**
   * value: "1200"
   * @const
   */
  _1200: "1200",

  /**
   * value: "1300"
   * @const
   */
  _1300: "1300",

  /**
   * value: "1400"
   * @const
   */
  _1400: "1400",

  /**
   * value: "1500"
   * @const
   */
  _1500: "1500",

  /**
   * value: "1600"
   * @const
   */
  _1600: "1600",

  /**
   * value: "1700"
   * @const
   */
  _1700: "1700",

  /**
   * value: "1800"
   * @const
   */
  _1800: "1800",

  /**
   * value: "1900"
   * @const
   */
  _1900: "1900",

  /**
   * value: "2110"
   * @const
   */
  _2110: "2110",

  /**
   * value: "2120"
   * @const
   */
  _2120: "2120",

  /**
   * value: "2210"
   * @const
   */
  _2210: "2210",

  /**
   * value: "2220"
   * @const
   */
  _2220: "2220",

  /**
   * value: "2310"
   * @const
   */
  _2310: "2310",

  /**
   * value: "2320"
   * @const
   */
  _2320: "2320",

  /**
   * value: "2385"
   * @const
   */
  _2385: "2385",

  /**
   * value: "2400"
   * @const
   */
  _2400: "2400",

  /**
   * value: "2700"
   * @const
   */
  _2700: "2700",

  /**
   * value: "2900"
   * @const
   */
  _2900: "2900",

  /**
   * value: "3110"
   * @const
   */
  _3110: "3110",

  /**
   * value: "3120"
   * @const
   */
  _3120: "3120",

  /**
   * value: "3205"
   * @const
   */
  _3205: "3205",

  /**
   * value: "3210"
   * @const
   */
  _3210: "3210",

  /**
   * value: "3220"
   * @const
   */
  _3220: "3220",

  /**
   * value: "3290"
   * @const
   */
  _3290: "3290",

  /**
   * value: "4110"
   * @const
   */
  _4110: "4110",

  /**
   * value: "4120"
   * @const
   */
  _4120: "4120",

  /**
   * value: "4130"
   * @const
   */
  _4130: "4130",

  /**
   * value: "4140"
   * @const
   */
  _4140: "4140",

  /**
   * value: "4150"
   * @const
   */
  _4150: "4150",

  /**
   * value: "4160"
   * @const
   */
  _4160: "4160",

  /**
   * value: "5191"
   * @const
   */
  _5191: "5191",

  /**
   * value: "5192"
   * @const
   */
  _5192: "5192",

  /**
   * value: "5193"
   * @const
   */
  _5193: "5193",

  /**
   * value: "5194"
   * @const
   */
  _5194: "5194",

  /**
   * value: "5195"
   * @const
   */
  _5195: "5195",

  /**
   * value: "5196"
   * @const
   */
  _5196: "5196",

  /**
   * value: "5202"
   * @const
   */
  _5202: "5202",

  /**
   * value: "5203"
   * @const
   */
  _5203: "5203",

  /**
   * value: "5306"
   * @const
   */
  _5306: "5306",

  /**
   * value: "5307"
   * @const
   */
  _5307: "5307",

  /**
   * value: "5308"
   * @const
   */
  _5308: "5308",

  /**
   * value: "5309"
   * @const
   */
  _5309: "5309",

  /**
   * value: "5385"
   * @const
   */
  _5385: "5385",

  /**
   * value: "5410"
   * @const
   */
  _5410: "5410",

  /**
   * value: "5415"
   * @const
   */
  _5415: "5415",

  /**
   * value: "5422"
   * @const
   */
  _5422: "5422",

  /**
   * value: "5426"
   * @const
   */
  _5426: "5426",

  /**
   * value: "5430"
   * @const
   */
  _5430: "5430",

  /**
   * value: "5431"
   * @const
   */
  _5431: "5431",

  /**
   * value: "5432"
   * @const
   */
  _5432: "5432",

  /**
   * value: "5442"
   * @const
   */
  _5442: "5442",

  /**
   * value: "5443"
   * @const
   */
  _5443: "5443",

  /**
   * value: "5451"
   * @const
   */
  _5451: "5451",

  /**
   * value: "5453"
   * @const
   */
  _5453: "5453",

  /**
   * value: "5454"
   * @const
   */
  _5454: "5454",

  /**
   * value: "5455"
   * @const
   */
  _5455: "5455",

  /**
   * value: "5458"
   * @const
   */
  _5458: "5458",

  /**
   * value: "5459"
   * @const
   */
  _5459: "5459",

  /**
   * value: "5460"
   * @const
   */
  _5460: "5460",

  /**
   * value: "5485"
   * @const
   */
  _5485: "5485",

  /**
   * value: "5498"
   * @const
   */
  _5498: "5498",

  /**
   * value: "5499"
   * @const
   */
  _5499: "5499",

  /**
   * value: "5505"
   * @const
   */
  _5505: "5505",

  /**
   * value: "5510"
   * @const
   */
  _5510: "5510",

  /**
   * value: "5515"
   * @const
   */
  _5515: "5515",

  /**
   * value: "5520"
   * @const
   */
  _5520: "5520",

  /**
   * value: "5522"
   * @const
   */
  _5522: "5522",

  /**
   * value: "5525"
   * @const
   */
  _5525: "5525",

  /**
   * value: "5530"
   * @const
   */
  _5530: "5530",

  /**
   * value: "5531"
   * @const
   */
  _5531: "5531",

  /**
   * value: "5532"
   * @const
   */
  _5532: "5532",

  /**
   * value: "5542"
   * @const
   */
  _5542: "5542",

  /**
   * value: "5543"
   * @const
   */
  _5543: "5543",

  /**
   * value: "5546"
   * @const
   */
  _5546: "5546",

  /**
   * value: "5547"
   * @const
   */
  _5547: "5547",

  /**
   * value: "5548"
   * @const
   */
  _5548: "5548",

  /**
   * value: "5551"
   * @const
   */
  _5551: "5551",

  /**
   * value: "5552"
   * @const
   */
  _5552: "5552",

  /**
   * value: "5553"
   * @const
   */
  _5553: "5553",

  /**
   * value: "5554"
   * @const
   */
  _5554: "5554",

  /**
   * value: "5555"
   * @const
   */
  _5555: "5555",

  /**
   * value: "5558"
   * @const
   */
  _5558: "5558",

  /**
   * value: "5559"
   * @const
   */
  _5559: "5559",

  /**
   * value: "5560"
   * @const
   */
  _5560: "5560",

  /**
   * value: "5585"
   * @const
   */
  _5585: "5585",

  /**
   * value: "5599"
   * @const
   */
  _5599: "5599",

  /**
   * value: "5605"
   * @const
   */
  _5605: "5605",

  /**
   * value: "5610"
   * @const
   */
  _5610: "5610",

  /**
   * value: "5615"
   * @const
   */
  _5615: "5615",

  /**
   * value: "5620"
   * @const
   */
  _5620: "5620",

  /**
   * value: "5622"
   * @const
   */
  _5622: "5622",

  /**
   * value: "5625"
   * @const
   */
  _5625: "5625",

  /**
   * value: "5630"
   * @const
   */
  _5630: "5630",

  /**
   * value: "5631"
   * @const
   */
  _5631: "5631",

  /**
   * value: "5632"
   * @const
   */
  _5632: "5632",

  /**
   * value: "5642"
   * @const
   */
  _5642: "5642",

  /**
   * value: "5643"
   * @const
   */
  _5643: "5643",

  /**
   * value: "5646"
   * @const
   */
  _5646: "5646",

  /**
   * value: "5647"
   * @const
   */
  _5647: "5647",

  /**
   * value: "5648"
   * @const
   */
  _5648: "5648",

  /**
   * value: "5651"
   * @const
   */
  _5651: "5651",

  /**
   * value: "5652"
   * @const
   */
  _5652: "5652",

  /**
   * value: "5653"
   * @const
   */
  _5653: "5653",

  /**
   * value: "5654"
   * @const
   */
  _5654: "5654",

  /**
   * value: "5655"
   * @const
   */
  _5655: "5655",

  /**
   * value: "5658"
   * @const
   */
  _5658: "5658",

  /**
   * value: "5659"
   * @const
   */
  _5659: "5659",

  /**
   * value: "5660"
   * @const
   */
  _5660: "5660",

  /**
   * value: "5685"
   * @const
   */
  _5685: "5685",

  /**
   * value: "5699"
   * @const
   */
  _5699: "5699",

  /**
   * value: "5710"
   * @const
   */
  _5710: "5710",

  /**
   * value: "5720"
   * @const
   */
  _5720: "5720",

  /**
   * value: "5785"
   * @const
   */
  _5785: "5785",

  /**
   * value: "5800"
   * @const
   */
  _5800: "5800",

  /**
   * value: "6100"
   * @const
   */
  _6100: "6100",

  /**
   * value: "6210"
   * @const
   */
  _6210: "6210",

  /**
   * value: "6220"
   * @const
   */
  _6220: "6220",

  /**
   * value: "6316"
   * @const
   */
  _6316: "6316",

  /**
   * value: "6317"
   * @const
   */
  _6317: "6317",

  /**
   * value: "6318"
   * @const
   */
  _6318: "6318",

  /**
   * value: "6411"
   * @const
   */
  _6411: "6411",

  /**
   * value: "6521"
   * @const
   */
  _6521: "6521",

  /**
   * value: "6532"
   * @const
   */
  _6532: "6532",

  /**
   * value: "6533"
   * @const
   */
  _6533: "6533",

  /**
   * value: "6534"
   * @const
   */
  _6534: "6534",

  /**
   * value: "6535"
   * @const
   */
  _6535: "6535",

  /**
   * value: "6536"
   * @const
   */
  _6536: "6536",

  /**
   * value: "6537"
   * @const
   */
  _6537: "6537",

  /**
   * value: "6538"
   * @const
   */
  _6538: "6538",

  /**
   * value: "6539"
   * @const
   */
  _6539: "6539",

  /**
   * value: "6540"
   * @const
   */
  _6540: "6540",

  /**
   * value: "6541"
   * @const
   */
  _6541: "6541",

  /**
   * value: "6542"
   * @const
   */
  _6542: "6542",

  /**
   * value: "6543"
   * @const
   */
  _6543: "6543",

  /**
   * value: "6544"
   * @const
   */
  _6544: "6544",

  /**
   * value: "6551"
   * @const
   */
  _6551: "6551",

  /**
   * value: "6554"
   * @const
   */
  _6554: "6554",

  /**
   * value: "6558"
   * @const
   */
  _6558: "6558",

  /**
   * value: "6560"
   * @const
   */
  _6560: "6560",

  /**
   * value: "6561"
   * @const
   */
  _6561: "6561",

  /**
   * value: "6562"
   * @const
   */
  _6562: "6562",

  /**
   * value: "6563"
   * @const
   */
  _6563: "6563",

  /**
   * value: "6564"
   * @const
   */
  _6564: "6564",

  /**
   * value: "6565"
   * @const
   */
  _6565: "6565",

  /**
   * value: "6566"
   * @const
   */
  _6566: "6566",

  /**
   * value: "6567"
   * @const
   */
  _6567: "6567",

  /**
   * value: "6568"
   * @const
   */
  _6568: "6568",

  /**
   * value: "6569"
   * @const
   */
  _6569: "6569",

  /**
   * value: "6571"
   * @const
   */
  _6571: "6571",

  /**
   * value: "6572"
   * @const
   */
  _6572: "6572",

  /**
   * value: "6573"
   * @const
   */
  _6573: "6573",

  /**
   * value: "6574"
   * @const
   */
  _6574: "6574",

  /**
   * value: "6575"
   * @const
   */
  _6575: "6575",

  /**
   * value: "6576"
   * @const
   */
  _6576: "6576",

  /**
   * value: "6577"
   * @const
   */
  _6577: "6577",

  /**
   * value: "6578"
   * @const
   */
  _6578: "6578",

  /**
   * value: "6585"
   * @const
   */
  _6585: "6585",

  /**
   * value: "6588"
   * @const
   */
  _6588: "6588",

  /**
   * value: "6589"
   * @const
   */
  _6589: "6589",

  /**
   * value: "6595"
   * @const
   */
  _6595: "6595",

  /**
   * value: "6596"
   * @const
   */
  _6596: "6596",

  /**
   * value: "6597"
   * @const
   */
  _6597: "6597",

  /**
   * value: "6598"
   * @const
   */
  _6598: "6598",

  /**
   * value: "6599"
   * @const
   */
  _6599: "6599",

  /**
   * value: "6901"
   * @const
   */
  _6901: "6901",

  /**
   * value: "7111"
   * @const
   */
  _7111: "7111",

  /**
   * value: "7112"
   * @const
   */
  _7112: "7112",

  /**
   * value: "7113"
   * @const
   */
  _7113: "7113",

  /**
   * value: "7120"
   * @const
   */
  _7120: "7120",

  /**
   * value: "7150"
   * @const
   */
  _7150: "7150",

  /**
   * value: "7160"
   * @const
   */
  _7160: "7160",

  /**
   * value: "7171"
   * @const
   */
  _7171: "7171",

  /**
   * value: "7172"
   * @const
   */
  _7172: "7172",

  /**
   * value: "7179"
   * @const
   */
  _7179: "7179",

  /**
   * value: "7190"
   * @const
   */
  _7190: "7190",

  /**
   * value: "7210"
   * @const
   */
  _7210: "7210",

  /**
   * value: "7220"
   * @const
   */
  _7220: "7220",

  /**
   * value: "7225"
   * @const
   */
  _7225: "7225",

  /**
   * value: "7229"
   * @const
   */
  _7229: "7229",

  /**
   * value: "7230"
   * @const
   */
  _7230: "7230",

  /**
   * value: "7312"
   * @const
   */
  _7312: "7312",

  /**
   * value: "7313"
   * @const
   */
  _7313: "7313",

  /**
   * value: "7314"
   * @const
   */
  _7314: "7314",

  /**
   * value: "7321"
   * @const
   */
  _7321: "7321",

  /**
   * value: "7322"
   * @const
   */
  _7322: "7322",

  /**
   * value: "7323"
   * @const
   */
  _7323: "7323",

  /**
   * value: "7331"
   * @const
   */
  _7331: "7331",

  /**
   * value: "7340"
   * @const
   */
  _7340: "7340",

  /**
   * value: "7341"
   * @const
   */
  _7341: "7341",

  /**
   * value: "7342"
   * @const
   */
  _7342: "7342",

  /**
   * value: "7343"
   * @const
   */
  _7343: "7343",

  /**
   * value: "7344"
   * @const
   */
  _7344: "7344",

  /**
   * value: "7345"
   * @const
   */
  _7345: "7345",

  /**
   * value: "7346"
   * @const
   */
  _7346: "7346",

  /**
   * value: "7347"
   * @const
   */
  _7347: "7347",

  /**
   * value: "7348"
   * @const
   */
  _7348: "7348",

  /**
   * value: "7349"
   * @const
   */
  _7349: "7349",

  /**
   * value: "7351"
   * @const
   */
  _7351: "7351",

  /**
   * value: "7352"
   * @const
   */
  _7352: "7352",

  /**
   * value: "7353"
   * @const
   */
  _7353: "7353",

  /**
   * value: "7354"
   * @const
   */
  _7354: "7354",

  /**
   * value: "7355"
   * @const
   */
  _7355: "7355",

  /**
   * value: "7356"
   * @const
   */
  _7356: "7356",

  /**
   * value: "7361"
   * @const
   */
  _7361: "7361",

  /**
   * value: "7362"
   * @const
   */
  _7362: "7362",

  /**
   * value: "7363"
   * @const
   */
  _7363: "7363",

  /**
   * value: "7364"
   * @const
   */
  _7364: "7364",

  /**
   * value: "7365"
   * @const
   */
  _7365: "7365",

  /**
   * value: "7366"
   * @const
   */
  _7366: "7366",

  /**
   * value: "7371"
   * @const
   */
  _7371: "7371",

  /**
   * value: "7372"
   * @const
   */
  _7372: "7372",

  /**
   * value: "7373"
   * @const
   */
  _7373: "7373",

  /**
   * value: "7378"
   * @const
   */
  _7378: "7378",

  /**
   * value: "7379"
   * @const
   */
  _7379: "7379",

  /**
   * value: "7381"
   * @const
   */
  _7381: "7381",

  /**
   * value: "7382"
   * @const
   */
  _7382: "7382",

  /**
   * value: "7383"
   * @const
   */
  _7383: "7383",

  /**
   * value: "7384"
   * @const
   */
  _7384: "7384",

  /**
   * value: "7385"
   * @const
   */
  _7385: "7385",

  /**
   * value: "7389"
   * @const
   */
  _7389: "7389",

  /**
   * value: "7410"
   * @const
   */
  _7410: "7410",

  /**
   * value: "7430"
   * @const
   */
  _7430: "7430",

  /**
   * value: "7450"
   * @const
   */
  _7450: "7450",

  /**
   * value: "7470"
   * @const
   */
  _7470: "7470",

  /**
   * value: "7490"
   * @const
   */
  _7490: "7490",

  /**
   * value: "8110"
   * @const
   */
  _8110: "8110",

  /**
   * value: "8120"
   * @const
   */
  _8120: "8120",

  /**
   * value: "8130"
   * @const
   */
  _8130: "8130",

  /**
   * value: "8140"
   * @const
   */
  _8140: "8140",

  /**
   * value: "8150"
   * @const
   */
  _8150: "8150",

  /**
   * value: "8160"
   * @const
   */
  _8160: "8160",

  /**
   * value: "8170"
   * @const
   */
  _8170: "8170",

  /**
   * value: "8190"
   * @const
   */
  _8190: "8190",

  /**
   * value: "8210"
   * @const
   */
  _8210: "8210",

  /**
   * value: "8250"
   * @const
   */
  _8250: "8250",

  /**
   * value: "8290"
   * @const
   */
  _8290: "8290",

  /**
   * value: "8310"
   * @const
   */
  _8310: "8310",

  /**
   * value: "8311"
   * @const
   */
  _8311: "8311",

  /**
   * value: "8410"
   * @const
   */
  _8410: "8410",

  /**
   * value: "8420"
   * @const
   */
  _8420: "8420",

  /**
   * value: "8450"
   * @const
   */
  _8450: "8450",

  /**
   * value: "8470"
   * @const
   */
  _8470: "8470",

  /**
   * value: "8490"
   * @const
   */
  _8490: "8490",

  /**
   * value: "8510"
   * @const
   */
  _8510: "8510",

  /**
   * value: "8520"
   * @const
   */
  _8520: "8520",

  /**
   * value: "9110"
   * @const
   */
  _9110: "9110",

  /**
   * value: "9150"
   * @const
   */
  _9150: "9150",

  /**
   * value: "9210"
   * @const
   */
  _9210: "9210",

  /**
   * value: "9220"
   * @const
   */
  _9220: "9220",

  /**
   * value: "9221"
   * @const
   */
  _9221: "9221",

  /**
   * value: "9222"
   * @const
   */
  _9222: "9222",

  /**
   * value: "9223"
   * @const
   */
  _9223: "9223",

  /**
   * value: "9224"
   * @const
   */
  _9224: "9224",

  /**
   * value: "9230"
   * @const
   */
  _9230: "9230",

  /**
   * value: "9240"
   * @const
   */
  _9240: "9240",

  /**
   * value: "9260"
   * @const
   */
  _9260: "9260",

  /**
   * value: "9300"
   * @const
   */
  _9300: "9300",

  /**
   * value: "9900"
   * @const
   */
  _9900: "9900",

  /**
   * value: "9970"
   * @const
   */
  _9970: "9970"
};
/**
 * | Code | Category | Details (in french) | | ---- | ----- | ---- | | 1000 | Individual company | Entrepreneur Individuel a Responsabilité Limitée (EIRL) | | 1100 | Individual company | Artisan-Commerçant | | 1200 | Individual company | Commerçant | | 1300 | Individual company | Artisan | | 1400 | Liberal profession | Officier public ou ministériel | | 1500 | Liberal profession | Profession libérale | | 1600 | Farm operator  | Exploitant agricole | | 1700 | Liberal profession | Agent commercial | | 1800 | Partner Director | Associé-gérant | | 1900 | Individual company | Personne physique | | 2110 | Indivision and others | Indivision entre personnes physiques | | 2120 | Indivision and others | Indivision avec personne morale | | 2210 | Indivision and others | Société créée de fait entre personnes physiques | | 2220 | Indivision and others | Société créée de fait avec personne morale | | 2310 | Indivision and others | Société en participation entre personnes physiques | | 2320 | Indivision and others | Société en participation avec personne morale | | 2385 | Indivision and others | Société en participation de professions libérales | | 2400 | Indivision and others | Fiducie | | 2700 | Diverse | Paroisse hors zone concordataire | | 2900 | Economic Interest Grouping | Autre groupement de droit privé non doté de la personnalité morale | | 3110 | Foreign company | Représentation ou agence commerciale d'état ou organisme public étranger  immatriculé au RCS | | 3120 | Foreign company | Société étrangère immatriculée au RCS | | 3205 | Foreign company | Organisation internationale | | 3210 | Foreign company | Etat collectivité ou établissement public étranger | | 3220 | Foreign company | Société étrangère non immatriculée au RCS | | 3290 | Foreign company | (Autre) personne morale de droit étranger | | 4110 | Administrations, Instituions | Etablissement public national à caractère industriel ou commercial doté d'un comptable public | | 4120 | Administrations, Instituions | Etablissement public national à caractère industriel ou commercial non doté d'un comptable public | | 4130 | Administrations, Instituions | Exploitant public | | 4140 | Administrations, Instituions | Etablissement public local à caractère industriel ou commercial | | 4150 | Administrations, Instituions | Régie d'une collectivité locale à caractère industriel ou commercial | | 4160 | Administrations, Instituions | Institution Banque de France | | 5191 | De facto undivided ownership company | Société de caution mutuelle | | 5192 | Diverse | Société coopérative de banque populaire | | 5193 | De facto undivided ownership company | Caisse de crédit maritime mutuel | | 5194 | De facto undivided ownership company | Caisse (fédérale) de crédit mutuel | | 5195 | Association fondation | Association coopérative inscrite (droit local Alsace Moselle) | | 5196 | De facto undivided ownership company | Caisse d'épargne et de prévoyance à forme coopérative | | 5202 | General partnership | Société en nom collectif | | 5203 | General partnership | Société en nom collectif coopérative | | 5306 | Limited company | Société en commandite simple | | 5307 | Limited company | Société en commandite simple coopérative | | 5308 | Limited company | Société en commandite par actions | | 5309 | Limited company | Société en commandite par actions coopérative | | 5385 | Limited company | Société d'exercice libéral en commandite par action | | 5410 | Limited Liability Company  | SARL nationale | | 5415 | Limited Liability Company  | SARL d'économie mixte | | 5422 | Limited Liability Company  | SARL immobilière pour le commerce et l'industrie (SICOMI) | | 5426 | Limited Liability Company  | Société immobilière de gestion | | 5430 | Limited Liability Company  | Safer en SARL | | 5431 | Limited Liability Company  | SARL mixte d'intérêt agricole (SIMA) | | 5432 | Limited Liability Company  | SARL d'intérêt collectif agricole (SICA) | | 5442 | Limited Liability Company  | SARL d'attribution | | 5443 | Limited Liability Company  | SARL coopérative de construction | | 5451 | Limited Liability Company  | SARL coopérative de consommation | | 5453 | Limited Liability Company  | SARL coopérative artisanale | | 5454 | Limited Liability Company  | SARL coopérative d'intérêt maritime | | 5455 | Limited Liability Company  | SARL coopérative de transports | | 5458 | Limited Liability Company  | SARL coopérative ouvrière de production et de crédit (SCOP) | | 5459 | Limited Liability Company  | SARL union de sociétés coopératives | | 5460 | Limited Liability Company  | SARL coopérative | | 5485 | Limited Liability Company  | Société d'exercice libéral à responsabilité limitée | | 5498 | Limited Liability Company  | SARL unipersonnelle | | 5499 | Limited Liability Company  | SARL | | 5505 | Limited company | SA à participation ouvrière à conseil d'administration | | 5510 | Limited company | SA nationale à conseil d'administration | | 5515 | Limited company | SA d'économie mixte à conseil d'administration | | 5520 | Limited company | Société d'investissement à capital variable (SICAV) à conseil d'administration | | 5522 | Limited company | Société anonyme immobilière pour le commerce et l'industrie (SICOMI)  à conseil d'administration | | 5525 | Limited company | Société anonyme immobilière d'investissement à conseil d'administration | | 5530 | Limited company | Safer anonyme à conseil d'administration | | 5531 | Limited company | Société anonyme mixte d'intérêt agricole (SMIA) à conseil d'administration | | 5532 | Limited company | Société anonyme mixte d'intérêt collectif agricole (SICA) à conseil d'administration | | 5542 | Limited company | Société anonyme d'attribution à conseil d'administration | | 5543 | Limited company | Société anonyme coopérative de construction à conseil d'administration | | 5546 | Limited company | SA de HLM à conseil d'administration | | 5547 | Limited company | SA coopérative de production de HLM à conseil d'administration | | 5548 | Limited company | SA de crédit immobilier à conseil d'administration | | 5551 | Limited company | SA coopérative de consommation à conseil d'administration | | 5552 | Limited company | SA coopérative de commerçants détaillants à conseil d'administration | | 5553 | Limited company | SA coopérative artisanale à conseil d'administration | | 5554 | Limited company | SA coopérative (d'intérêt) maritime à conseil d'administration | | 5555 | Limited company | SA coopérative de transports à conseil d'administration | | 5558 | Limited company | SCOP à conseil d'administration | | 5559 | Limited company | SA union de sociétés coopératives à conseil d'administration | | 5560 | Limited company | SA coopérative à conseil d'administration | | 5585 | Limited company | Société d'exercice libéral à forme anonyme à conseil d'administration | | 5599 | Limited company | SA à conseil d'administration | | 5605 | Limited company | SA à participation ouvrière à directoire | | 5610 | Limited company | SA nationale à directoire | | 5615 | Limited company | SA d'économie mixte à directoire | | 5620 | Limited company | SICAV | | 5622 | Limited company | SICOMI | | 5625 | Limited company | Société immobilière d'investissement anonyme à directoire | | 5630 | Limited company | Safer anonyme à directoire | | 5631 | Limited company | Société anonyme mixte d'intérêt agricole (SMIA) | | 5632 | Limited company | SICA | | 5642 | Limited company | Société anonyme d'attribution à directoire | | 5643 | Limited company | Société anonyme coopérative de construction à directoire | | 5646 | Limited company | S.A. HLM à directoire | | 5647 | Limited company | Société coopérative de production de HLM anonyme à directoire | | 5648 | Limited company | SA de crédit immobilier à directoire | | 5651 | Limited company | SA coopérative de consommation à directoire | | 5652 | Limited company | SA coopérative de commerçants détaillants à directoire | | 5653 | Limited company | SA coopérative artisanale à directoire | | 5654 | Limited company | SA coopérative (d'intérêt) maritime à directoire | | 5655 | Limited company | SA coopérative de transport à directoire | | 5658 | Limited company | SCOP | | 5659 | Limited company | SA union de sociétés coopératives à directoire | | 5660 | Limited company | SA coopérative à directoire | | 5685 | Limited company | Société d'exercice libéral à forme anonyme à directoire | | 5699 | Limited company | (Autre) SA à directoire | | 5710 | Limited company | SAS | | 5720 | Limited company | SASU | | 5785 | Limited company | Société d'exercice libéral par action simplifiée | | 5800 | Diverse | Société européenne | | 6100 | De facto undivided ownership company | Caisse d'épargne et de prévoyance | | 6210 | Economic Interest Grouping | GEIE | | 6220 | Economic Interest Grouping | GIE | | 6316 | Diverse | CUMA | | 6317 | Diverse | Société coopérative agricole | | 6318 | Diverse | Union de sociétés coopératives agricoles | | 6411 | De facto undivided ownership company | Société d'assurance mutuelle | | 6521 | Civils companies (without SCI) | SCPI | | 6532 | Civils companies (without SCI) | SICA | | 6533 | Civils companies (without SCI) | GAEC | | 6534 | Civils companies (without SCI) | Groupement foncier agricole | | 6535 | Civils companies (without SCI) | Groupement agricole foncier | | 6536 | Civils companies (without SCI) | Groupement forestier | | 6537 | Civils companies (without SCI) | Groupement pastoral | | 6538 | Civils companies (without SCI) | Groupement foncier rural | | 6539 | Civils companies (without SCI) | Société civile foncière | | 6540 | Civils companies | SCI | | 6541 | Civils companies | SCI de construction vente | | 6542 | Civils companies (without SCI) | Société civile d'attribution | | 6543 | Civils companies (without SCI) | Société civile coopérative de construction | | 6544 | Civils companies | Société civile d'accession progressive à la propriété | | 6551 | Civils companies (without SCI) | Société civile coopérative de consommation | | 6554 | Civils companies (without SCI) | Société civile coopérative (d'intérêt) maritime | | 6558 | Civils companies (without SCI) | Société civile coopérative entre médecins | | 6560 | Civils companies (without SCI) | SCP | | 6561 | Civils companies (without SCI) | SCP d'avocats | | 6562 | Civils companies (without SCI) | SCP d'avocats aux conseil | | 6563 | Civils companies (without SCI) | SCP d'avoués d'appel | | 6564 | Civils companies (without SCI) | SCP d'huissiers | | 6565 | Civils companies (without SCI) | SCP de notaires | | 6566 | Civils companies (without SCI) | SCP de commissaires-priseurs | | 6567 | Civils companies (without SCI) | SCP de greffiers de tribunal de commerce | | 6568 | Civils companies (without SCI) | SCP de conseils juridiques | | 6569 | Civils companies (without SCI) | SCP de commissaires aux comptes | | 6571 | Civils companies (without SCI) | SCP de médecins | | 6572 | Civils companies (without SCI) | SCP de dentistes | | 6573 | Civils companies (without SCI) | SCP d'infirmiers | | 6574 | Civils companies (without SCI) | SCP de masseurs kinésithérapeutes | | 6575 | Civils companies (without SCI) | SCP de directeurs de laboratoire d'analyse médicale | | 6576 | Civils companies (without SCI) | SCP de vétérinaires | | 6577 | Civils companies (without SCI) | SCP de géomètres-experts | | 6578 | Civils companies (without SCI) | SCP d'architectes | | 6585 | Civils companies (without SCI) | SCP | | 6588 | Civils companies (without SCI) | Société civile laitière | | 6589 | Civils companies (without SCI) | Société civile de moyens | | 6595 | Civils companies (without SCI) | Caisse (locale) de crédit mutuel | | 6596 | Civils companies (without SCI) | Caisse de crédit agricole mutuel | | 6597 | Civils companies (without SCI) | Société civile d'exploitation agricole | | 6598 | Farm operator  | Exploitation agricole à responsabilité limitée | | 6599 | Civils companies (without SCI) | Autre société civile | | 6901 | Diverse | Autres personnes de droit privé inscrites au registre du commerce et des sociétés | | 7111 | Administrations, Instituions | Autorité constitutionnelle | | 7112 | Administrations, Instituions | Autorité administrative indépendante | | 7113 | Administrations, Instituions | Ministère | | 7120 | Administrations, Instituions | Service central d'un ministère | | 7150 | Administrations, Instituions | Service du ministère de la Défense | | 7160 | Administrations, Instituions | Service déconcentré à compétence nation . D'un ministère (hors Défense) | | 7171 | Administrations, Instituions | Service déconcentré de l'Etat à compétence (inter) régionale | | 7172 | Administrations, Instituions | Service déconcentré de l'Etat à compétence (inter) départementale | | 7179 | Administrations, Instituions | (Autre) Service déconcentré de l'Etat à compétence territoriale | | 7190 | Administrations, Instituions | Ecole nationale non dotée de la personnalité morale | | 7210 | Administrations, Instituions | Commune | | 7220 | Administrations, Instituions | Département | | 7225 | Administrations, Instituions | Territoire d'Outre-Mer | | 7229 | Administrations, Instituions | (Autre) Collectivité territoriale | | 7230 | Administrations, Instituions | Région | | 7312 | Administrations, Instituions | Commune associée | | 7313 | Administrations, Instituions | Section de commune | | 7314 | Administrations, Instituions | Ensemble urbain | | 7321 | Administrations, Instituions | Association syndicale autorisée | | 7322 | Administrations, Instituions | Association foncière urbaine | | 7323 | Administrations, Instituions | Association foncière de remembrement | | 7331 | Administrations, Instituions | Etablissement public local d'enseignement | | 7340 | Administrations, Instituions | Pôle métropolitain | | 7341 | Administrations, Instituions | Secteur de commune | | 7342 | Administrations, Instituions | District urbain | | 7343 | Administrations, Instituions | Communauté urbaine | | 7344 | Administrations, Instituions | Métropole | | 7345 | Administrations, Instituions | Syndicat intercommunal à vocation multiple (SIVOM) | | 7346 | Administrations, Instituions | Communauté de commune | | 7347 | Administrations, Instituions | Communauté de villes | | 7348 | Administrations, Instituions | Communauté d'agglomération | | 7349 | Administrations, Instituions | Autre établissement public local de coopération non spécialisé ou entente | | 7351 | Administrations, Instituions | Institution interdépartementale ou entente | | 7352 | Administrations, Instituions | Institution interrégionale ou entente | | 7353 | Administrations, Instituions | Syndicat intercommunal à vocation unique (SIVU) | | 7354 | Administrations, Instituions | Syndicat mixte communal | | 7355 | Administrations, Instituions | Autre syndicat mixte | | 7356 | Administrations, Instituions | Commission syndicale pour la gestion des biens indivis des communes | | 7361 | Administrations, Instituions | Centre communal d'action sociale | | 7362 | Administrations, Instituions | Caisse des écoles | | 7363 | Administrations, Instituions | Caisse de crédit municipal | | 7364 | Administrations, Instituions | Etablissement d'hospitalisation | | 7365 | Administrations, Instituions | Syndicat inter hospitalier | | 7366 | Administrations, Instituions | Etablissement public local social et médico-social | | 7371 | Administrations, Instituions | Office public d'habitation à loyer modéré (OPHLM) | | 7372 | Administrations, Instituions | Service départemental d'incendie | | 7373 | Administrations, Instituions | Etablissement public local culturel | | 7378 | Administrations, Instituions | Régie d'une collectivité locale à caractère administratif | | 7379 | Administrations, Instituions | (Autre) Etablissement public administratif local | | 7381 | Administrations, Instituions | Organisme consulaire | | 7382 | Administrations, Instituions | Etablissement public national ayant fonction d'administration centrale | | 7383 | Administrations, Instituions | Etablissement public national à caractère scientifique  culturel et professionnel | | 7384 | Administrations, Instituions | Autre établissement public national d'enseignement | | 7385 | Administrations, Instituions | Autre établissement public national administratif à compétence territoriale limitée | | 7389 | Administrations, Instituions | Etablissement public national à caractère administratif | | 7410 | Administrations, Instituions | Groupement d'intérêt public (GIP) | | 7430 | Administrations, Instituions | Etablissement public des cultes d'Alsace-Lorraine | | 7450 | Administrations, Instituions | Etablissement public, cercle et foyer dans les armées | | 7470 | Administrations, Instituions | Groupement de coopération sanitaire à gestion publique | | 7490 | Administrations, Instituions | Autre personne morale de droit administratif | | 8110 | Administrations, Instituions | Régime général de la sécurité sociale | | 8120 | Administrations, Instituions | Régime spécial de sécurité sociale | | 8130 | Administrations, Instituions | Institution de retraite complémentaire | | 8140 | Administrations, Instituions | Mutualité sociale agricole | | 8150 | Administrations, Instituions | Régime maladie des non-salariés non agricoles | | 8160 | Administrations, Instituions | Régime vieillesse ne dépendant pas du régime général de la sécurité sociale | | 8170 | Administrations, Instituions | Régime d'assurance chômage | | 8190 | Administrations, Instituions | Autre régime de prévoyance sociale | | 8210 | De facto undivided ownership company | Mutuelle | | 8250 | De facto undivided ownership company | Assurance mutuelle agricole | | 8290 | De facto undivided ownership company | Autre organisme mutualiste | | 8310 | Association fondation | Comité central d'entreprise | | 8311 | Association fondation | Comité d'établissement | | 8410 | Association fondation | Syndicat de salariés | | 8420 | Association fondation | Syndicat patronal | | 8450 | Association fondation | Ordre professionnel ou assimilé | | 8470 | Association fondation | Centre technique industriel ou comité professionnel du développement économique | | 8490 | Association fondation | Autre organisme professionnel | | 8510 | Administrations, Instituions | Institution de prévoyance | | 8520 | Administrations, Instituions | Institution de retraite supplémentaire | | 9110 | Condominium syndicate | Syndicat de copropriété | | 9150 | Association fondation | Association syndicale libre | | 9210 | Association fondation | Association non déclarée | | 9220 | Association fondation | Association déclarée | | 9221 | Association fondation | Association déclarée \"entreprises d'insertion par l'économique\" | | 9222 | Association fondation | Association intermédiaire | | 9223 | Association fondation | Groupement d'employeurs | | 9224 | Association fondation | Association d'avocats à responsabilité professionnelle individuelle | | 9230 | Association fondation | Association déclarée  reconnue d'utilité publique | | 9240 | Association fondation | Congrégation | | 9260 | Association fondation | Association de droit local | | 9300 | Association fondation | Fondation | | 9900 | Diverse | Autre personne morale de droit privé | | 9970 | Diverse | Groupement de coopération sanitaire à gestion privée | 
 * @member {module:model/InlineResponse2005Businessinformations.LegalFormEnum} legalForm
 */
InlineResponse2005Businessinformations.prototype.legalForm = undefined;

/**
 * Business share capital.
 * @member {Number} legalShareCapital
 */
InlineResponse2005Businessinformations.prototype.legalShareCapital = undefined;

/**
 * Business sector code. NAF code in France
 * @member {String} legalSector
 */
InlineResponse2005Businessinformations.prototype.legalSector = undefined;

/**
 * Allowed values for the <code>legalAnnualTurnOver</code> property.
 * @enum {String}
 * @readonly
 */
InlineResponse2005Businessinformations.LegalAnnualTurnOverEnum = {
  /**
   * value: ""
   * @const
   */
  empty: "",

  /**
   * value: "0-39"
   * @const
   */
  _039: "0-39",

  /**
   * value: "40-99"
   * @const
   */
  _4099: "40-99",

  /**
   * value: "100-249"
   * @const
   */
  _100249: "100-249",

  /**
   * value: "250-999"
   * @const
   */
  _250999: "250-999",

  /**
   * value: "1000-2999"
   * @const
   */
  _10002999: "1000-2999",

  /**
   * value: "3000-9999"
   * @const
   */
  _30009999: "3000-9999",

  /**
   * value: "10000-99999"
   * @const
   */
  _1000099999: "10000-99999",

  /**
   * value: "100000-*"
   * @const
   */
  _100000_: "100000-*"
};
/**
 * Business annual turnover range in k€. 
 * @member {module:model/InlineResponse2005Businessinformations.LegalAnnualTurnOverEnum} legalAnnualTurnOver
 */
InlineResponse2005Businessinformations.prototype.legalAnnualTurnOver = undefined;

/**
 * Allowed values for the <code>legalNetIncomeRange</code> property.
 * @enum {String}
 * @readonly
 */
InlineResponse2005Businessinformations.LegalNetIncomeRangeEnum = {
  /**
   * value: ""
   * @const
   */
  empty: "",

  /**
   * value: "0-4"
   * @const
   */
  _04: "0-4",

  /**
   * value: "5-9"
   * @const
   */
  _59: "5-9",

  /**
   * value: "10-49"
   * @const
   */
  _1049: "10-49",

  /**
   * value: "50-149"
   * @const
   */
  _50149: "50-149",

  /**
   * value: "150-499"
   * @const
   */
  _150499: "150-499",

  /**
   * value: "500-*"
   * @const
   */
  _500_: "500-*"
};
/**
 * Business annual netincome in k€. 
 * @member {module:model/InlineResponse2005Businessinformations.LegalNetIncomeRangeEnum} legalNetIncomeRange
 */
InlineResponse2005Businessinformations.prototype.legalNetIncomeRange = undefined;

/**
 * Allowed values for the <code>legalNumberOfEmployeeRange</code> property.
 * @enum {String}
 * @readonly
 */
InlineResponse2005Businessinformations.LegalNumberOfEmployeeRangeEnum = {
  /**
   * value: ""
   * @const
   */
  empty: "",

  /**
   * value: "0"
   * @const
   */
  _0: "0",

  /**
   * value: "1-9"
   * @const
   */
  _19: "1-9",

  /**
   * value: "10-99"
   * @const
   */
  _1099: "10-99",

  /**
   * value: "100-249"
   * @const
   */
  _100249: "100-249",

  /**
   * value: "250-*"
   * @const
   */
  _250_: "250-*"
};
/**
 * Business workforce. 
 * @member {module:model/InlineResponse2005Businessinformations.LegalNumberOfEmployeeRangeEnum} legalNumberOfEmployeeRange
 */
InlineResponse2005Businessinformations.prototype.legalNumberOfEmployeeRange = undefined;

/**
 * Business phone number.
 * @member {String} phone
 */
InlineResponse2005Businessinformations.prototype.phone = undefined;

/**
 * Business generic email.
 * @member {String} email
 */
InlineResponse2005Businessinformations.prototype.email = undefined;

/**
 * Business' street
 * @member {String} address1
 */
InlineResponse2005Businessinformations.prototype.address1 = undefined;

/**
 * Business' postal code
 * @member {String} postcode
 */
InlineResponse2005Businessinformations.prototype.postcode = undefined;

/**
 * Business' city
 * @member {String} city
 */
InlineResponse2005Businessinformations.prototype.city = undefined;

/**
 * Business' province
 * @member {String} state
 */
InlineResponse2005Businessinformations.prototype.state = undefined;

/**
 * Business' country
 * @member {String} country
 */
InlineResponse2005Businessinformations.prototype.country = undefined;

/**
 * Allowed values for the <code>status</code> property.
 * @enum {String}
 * @readonly
 */
InlineResponse2005Businessinformations.StatusEnum = {
  /**
   * value: "D"
   * @const
   */
  D: "D",

  /**
   * value: "N"
   * @const
   */
  N: "N",

  /**
   * value: "I"
   * @const
   */
  I: "I",

  /**
   * value: "A"
   * @const
   */
  A: "A",

  /**
   * value: "C"
   * @const
   */
  C: "C",

  /**
   * value: "T"
   * @const
   */
  T: "T",

  /**
   * value: "S"
   * @const
   */
  S: "S",

  /**
   * value: "L"
   * @const
   */
  L: "L",

  /**
   * value: "O"
   * @const
   */
  O: "O"
};
/**
 * | Code | Description | | ---- | ----------- | |  D   | Deleted     | |  N   | Company non diffusible (Insee) | |  I   | Inactive (Insee) | |  A   | Economically active | |  C   | Closed | |  T   | Transfered | |  S   | Economically stopped (Insee) | |  L   | Liquidation | |  O   | Dormant company | 
 * @member {module:model/InlineResponse2005Businessinformations.StatusEnum} status
 */
InlineResponse2005Businessinformations.prototype.status = undefined;

/**
 * Business trade name
 * @member {String} tradename
 */
InlineResponse2005Businessinformations.prototype.tradename = undefined;

/**
 * @member {Array.<module:model/InlineResponse2005Users>} users
 */
InlineResponse2005Businessinformations.prototype.users = undefined;

