/*
 * Treezor
 * Treezor API.  more info [here](https://www.treezor.com). 
 *
 * OpenAPI spec version: 0.1.1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.26
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';

/**
 * The InlineResponse20019Payouts model module.
 * @module model/InlineResponse20019Payouts
 * @version 0.1.1
 */
export class InlineResponse20019Payouts {
  /**
   * Constructs a new <code>InlineResponse20019Payouts</code>.
   * @alias module:model/InlineResponse20019Payouts
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>InlineResponse20019Payouts</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/InlineResponse20019Payouts} obj Optional instance to populate.
   * @return {module:model/InlineResponse20019Payouts} The populated <code>InlineResponse20019Payouts</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new InlineResponse20019Payouts();
      if (data.hasOwnProperty('payoutId'))
        obj.payoutId = ApiClient.convertToType(data['payoutId'], 'Number');
      if (data.hasOwnProperty('payoutTag'))
        obj.payoutTag = ApiClient.convertToType(data['payoutTag'], 'String');
      if (data.hasOwnProperty('payoutStatus'))
        obj.payoutStatus = ApiClient.convertToType(data['payoutStatus'], 'String');
      if (data.hasOwnProperty('payoutTypeId'))
        obj.payoutTypeId = ApiClient.convertToType(data['payoutTypeId'], 'Number');
      if (data.hasOwnProperty('payoutType'))
        obj.payoutType = ApiClient.convertToType(data['payoutType'], 'String');
      if (data.hasOwnProperty('walletId'))
        obj.walletId = ApiClient.convertToType(data['walletId'], 'Number');
      if (data.hasOwnProperty('payoutDate'))
        obj.payoutDate = ApiClient.convertToType(data['payoutDate'], 'String');
      if (data.hasOwnProperty('walletEventName'))
        obj.walletEventName = ApiClient.convertToType(data['walletEventName'], 'String');
      if (data.hasOwnProperty('walletAlias'))
        obj.walletAlias = ApiClient.convertToType(data['walletAlias'], 'String');
      if (data.hasOwnProperty('userFirstname'))
        obj.userFirstname = ApiClient.convertToType(data['userFirstname'], 'String');
      if (data.hasOwnProperty('userLastname'))
        obj.userLastname = ApiClient.convertToType(data['userLastname'], 'String');
      if (data.hasOwnProperty('userId'))
        obj.userId = ApiClient.convertToType(data['userId'], 'Number');
      if (data.hasOwnProperty('bankaccountId'))
        obj.bankaccountId = ApiClient.convertToType(data['bankaccountId'], 'Number');
      if (data.hasOwnProperty('beneficiaryId'))
        obj.beneficiaryId = ApiClient.convertToType(data['beneficiaryId'], 'Number');
      if (data.hasOwnProperty('uniqueMandateReference'))
        obj.uniqueMandateReference = ApiClient.convertToType(data['uniqueMandateReference'], 'String');
      if (data.hasOwnProperty('bankaccountIBAN'))
        obj.bankaccountIBAN = ApiClient.convertToType(data['bankaccountIBAN'], 'String');
      if (data.hasOwnProperty('label'))
        obj.label = ApiClient.convertToType(data['label'], 'String');
      if (data.hasOwnProperty('amount'))
        obj.amount = ApiClient.convertToType(data['amount'], 'String');
      if (data.hasOwnProperty('currency'))
        obj.currency = ApiClient.convertToType(data['currency'], 'String');
      if (data.hasOwnProperty('partnerFee'))
        obj.partnerFee = ApiClient.convertToType(data['partnerFee'], 'String');
      if (data.hasOwnProperty('createdDate'))
        obj.createdDate = ApiClient.convertToType(data['createdDate'], 'String');
      if (data.hasOwnProperty('modifiedDate'))
        obj.modifiedDate = ApiClient.convertToType(data['modifiedDate'], 'String');
      if (data.hasOwnProperty('totalRows'))
        obj.totalRows = ApiClient.convertToType(data['totalRows'], 'Number');
    }
    return obj;
  }
}

/**
 * @member {Number} payoutId
 */
InlineResponse20019Payouts.prototype.payoutId = undefined;

/**
 * @member {String} payoutTag
 */
InlineResponse20019Payouts.prototype.payoutTag = undefined;

/**
 * Allowed values for the <code>payoutStatus</code> property.
 * @enum {String}
 * @readonly
 */
InlineResponse20019Payouts.PayoutStatusEnum = {
  /**
   * value: "PENDING"
   * @const
   */
  PENDING: "PENDING",

  /**
   * value: "CANCELED"
   * @const
   */
  CANCELED: "CANCELED",

  /**
   * value: "VALIDATED"
   * @const
   */
  VALIDATED: "VALIDATED"
};
/**
 * @member {module:model/InlineResponse20019Payouts.PayoutStatusEnum} payoutStatus
 */
InlineResponse20019Payouts.prototype.payoutStatus = undefined;

/**
 * @member {Number} payoutTypeId
 */
InlineResponse20019Payouts.prototype.payoutTypeId = undefined;

/**
 * Allowed values for the <code>payoutType</code> property.
 * @enum {String}
 * @readonly
 */
InlineResponse20019Payouts.PayoutTypeEnum = {
  /**
   * value: "Credit Transfer"
   * @const
   */
  creditTransfer: "Credit Transfer",

  /**
   * value: "Direct Debit"
   * @const
   */
  directDebit: "Direct Debit"
};
/**
 * @member {module:model/InlineResponse20019Payouts.PayoutTypeEnum} payoutType
 */
InlineResponse20019Payouts.prototype.payoutType = undefined;

/**
 * @member {Number} walletId
 */
InlineResponse20019Payouts.prototype.walletId = undefined;

/**
 * Date YYYY-MM-DD
 * @member {String} payoutDate
 */
InlineResponse20019Payouts.prototype.payoutDate = undefined;

/**
 * @member {String} walletEventName
 */
InlineResponse20019Payouts.prototype.walletEventName = undefined;

/**
 * @member {String} walletAlias
 */
InlineResponse20019Payouts.prototype.walletAlias = undefined;

/**
 * @member {String} userFirstname
 */
InlineResponse20019Payouts.prototype.userFirstname = undefined;

/**
 * @member {String} userLastname
 */
InlineResponse20019Payouts.prototype.userLastname = undefined;

/**
 * @member {Number} userId
 */
InlineResponse20019Payouts.prototype.userId = undefined;

/**
 * @member {Number} bankaccountId
 */
InlineResponse20019Payouts.prototype.bankaccountId = undefined;

/**
 * @member {Number} beneficiaryId
 */
InlineResponse20019Payouts.prototype.beneficiaryId = undefined;

/**
 * @member {String} uniqueMandateReference
 */
InlineResponse20019Payouts.prototype.uniqueMandateReference = undefined;

/**
 * @member {String} bankaccountIBAN
 */
InlineResponse20019Payouts.prototype.bankaccountIBAN = undefined;

/**
 * @member {String} label
 */
InlineResponse20019Payouts.prototype.label = undefined;

/**
 * @member {String} amount
 */
InlineResponse20019Payouts.prototype.amount = undefined;

/**
 * @member {String} currency
 */
InlineResponse20019Payouts.prototype.currency = undefined;

/**
 * @member {String} partnerFee
 */
InlineResponse20019Payouts.prototype.partnerFee = undefined;

/**
 * Date YYYY-MM-DD HH:MM:SS
 * @member {String} createdDate
 */
InlineResponse20019Payouts.prototype.createdDate = undefined;

/**
 * Date YYYY-MM-DD HH:MM:SS
 * @member {String} modifiedDate
 */
InlineResponse20019Payouts.prototype.modifiedDate = undefined;

/**
 * @member {Number} totalRows
 */
InlineResponse20019Payouts.prototype.totalRows = undefined;

