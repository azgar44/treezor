/*
 * Treezor
 * Treezor API.  more info [here](https://www.treezor.com). 
 *
 * OpenAPI spec version: 0.1.1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.26
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';

/**
 * The InlineResponse2005Users model module.
 * @module model/InlineResponse2005Users
 * @version 0.1.1
 */
export class InlineResponse2005Users {
  /**
   * Constructs a new <code>InlineResponse2005Users</code>.
   * @alias module:model/InlineResponse2005Users
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>InlineResponse2005Users</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/InlineResponse2005Users} obj Optional instance to populate.
   * @return {module:model/InlineResponse2005Users} The populated <code>InlineResponse2005Users</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new InlineResponse2005Users();
      if (data.hasOwnProperty('firstname'))
        obj.firstname = ApiClient.convertToType(data['firstname'], 'String');
      if (data.hasOwnProperty('lastname'))
        obj.lastname = ApiClient.convertToType(data['lastname'], 'String');
      if (data.hasOwnProperty('fullnames'))
        obj.fullnames = ApiClient.convertToType(data['fullnames'], 'String');
      if (data.hasOwnProperty('birthday'))
        obj.birthday = ApiClient.convertToType(data['birthday'], 'String');
      if (data.hasOwnProperty('parentType'))
        obj.parentType = ApiClient.convertToType(data['parentType'], 'String');
    }
    return obj;
  }
}

/**
 * Representative's first name.
 * @member {String} firstname
 */
InlineResponse2005Users.prototype.firstname = undefined;

/**
 * Representative's last name.
 * @member {String} lastname
 */
InlineResponse2005Users.prototype.lastname = undefined;

/**
 * Representative's full names.
 * @member {String} fullnames
 */
InlineResponse2005Users.prototype.fullnames = undefined;

/**
 * Representative's birthdate. Format YYYY-MM-DD
 * @member {String} birthday
 */
InlineResponse2005Users.prototype.birthday = undefined;

/**
 * Allowed values for the <code>parentType</code> property.
 * @enum {String}
 * @readonly
 */
InlineResponse2005Users.ParentTypeEnum = {
  /**
   * value: "Honorary president"
   * @const
   */
  honoraryPresident: "Honorary president",

  /**
   * value: "Not associated manager"
   * @const
   */
  notAssociatedManager: "Not associated manager",

  /**
   * value: "President of the control council"
   * @const
   */
  presidentOfTheControlCouncil: "President of the control council",

  /**
   * value: "Member of the management board"
   * @const
   */
  memberOfTheManagementBoard: "Member of the management board",

  /**
   * value: "Member of the supervisory council"
   * @const
   */
  memberOfTheSupervisoryCouncil: "Member of the supervisory council",

  /**
   * value: "Member of the control committee"
   * @const
   */
  memberOfTheControlCommittee: "Member of the control committee",

  /**
   * value: "Partner"
   * @const
   */
  partner: "Partner",

  /**
   * value: "Management advisor "
   * @const
   */
  managementAdvisor_: "Management advisor ",

  /**
   * value: "Deputy managing director"
   * @const
   */
  deputyManagingDirector: "Deputy managing director",

  /**
   * value: "Vice-president of the management board"
   * @const
   */
  vicePresidentOfTheManagementBoard: "Vice-president of the management board",

  /**
   * value: "Vice-president of the supervisory council"
   * @const
   */
  vicePresidentOfTheSupervisoryCouncil: "Vice-president of the supervisory council",

  /**
   * value: "Developer"
   * @const
   */
  developer: "Developer",

  /**
   * value: "Other manager"
   * @const
   */
  otherManager: "Other manager",

  /**
   * value: "Receiver"
   * @const
   */
  receiver: "Receiver",

  /**
   * value: "Authorized agent"
   * @const
   */
  authorizedAgent: "Authorized agent",

  /**
   * value: "Person in charge abroad"
   * @const
   */
  personInChargeAbroad: "Person in charge abroad",

  /**
   * value: "Representative in France"
   * @const
   */
  representativeInFrance: "Representative in France",

  /**
   * value: "Member of the management council"
   * @const
   */
  memberOfTheManagementCouncil: "Member of the management council",

  /**
   * value: "Member of the control council"
   * @const
   */
  memberOfTheControlCouncil: "Member of the control council",

  /**
   * value: "Treasurer"
   * @const
   */
  treasurer: "Treasurer",

  /**
   * value: "Secretary"
   * @const
   */
  secretary: "Secretary",

  /**
   * value: "Member"
   * @const
   */
  member: "Member",

  /**
   * value: "Administrative director"
   * @const
   */
  administrativeDirector: "Administrative director",

  /**
   * value: "Sales director"
   * @const
   */
  salesDirector: "Sales director",

  /**
   * value: "Financial director"
   * @const
   */
  financialDirector: "Financial director",

  /**
   * value: "Chief Technical Officer"
   * @const
   */
  chiefTechnicalOfficer: "Chief Technical Officer",

  /**
   * value: "General secretary"
   * @const
   */
  generalSecretary: "General secretary",

  /**
   * value: "Chief accountant"
   * @const
   */
  chiefAccountant: "Chief accountant",

  /**
   * value: "Guardian"
   * @const
   */
  guardian: "Guardian",

  /**
   * value: "Plan commissioner "
   * @const
   */
  planCommissioner_: "Plan commissioner ",

  /**
   * value: "Management agent"
   * @const
   */
  managementAgent: "Management agent",

  /**
   * value: "Concordat commissioner"
   * @const
   */
  concordatCommissioner: "Concordat commissioner",

  /**
   * value: "Representative of the creditors"
   * @const
   */
  representativeOfTheCreditors: "Representative of the creditors",

  /**
   * value: "Judicial representative"
   * @const
   */
  judicialRepresentative: "Judicial representative",

  /**
   * value: "Substitute judge-commissioner"
   * @const
   */
  substituteJudgeCommissioner: "Substitute judge-commissioner",

  /**
   * value: "Judge-commissioner"
   * @const
   */
  judgeCommissioner: "Judge-commissioner",

  /**
   * value: "Receiver/representative of the creditors"
   * @const
   */
  receiverrepresentativeOfTheCreditors: "Receiver/representative of the creditors",

  /**
   * value: "Conciliator"
   * @const
   */
  conciliator: "Conciliator",

  /**
   * value: "Auditor"
   * @const
   */
  auditor: "Auditor",

  /**
   * value: "Statutory auditor"
   * @const
   */
  statutoryAuditor: "Statutory auditor",

  /**
   * value: "Supervision commissioner"
   * @const
   */
  supervisionCommissioner: "Supervision commissioner",

  /**
   * value: "Deputy auditor"
   * @const
   */
  deputyAuditor: "Deputy auditor",

  /**
   * value: "Spouse-associate"
   * @const
   */
  spouseAssociate: "Spouse-associate",

  /**
   * value: "Accounts controller"
   * @const
   */
  accountsController: "Accounts controller",

  /**
   * value: "Censor"
   * @const
   */
  censor: "Censor",

  /**
   * value: "Chief Executive Officer"
   * @const
   */
  chiefExecutiveOfficer: "Chief Executive Officer",

  /**
   * value: "President"
   * @const
   */
  president: "President",

  /**
   * value: "Chairman of the Board"
   * @const
   */
  chairmanOfTheBoard: "Chairman of the Board",

  /**
   * value: "Governor"
   * @const
   */
  governor: "Governor",

  /**
   * value: "Deputy governor"
   * @const
   */
  deputyGovernor: "Deputy governor",

  /**
   * value: "Person having the power to usually involve the company"
   * @const
   */
  personHavingThePowerToUsuallyInvolveTheCompany: "Person having the power to usually involve the company",

  /**
   * value: "Manager"
   * @const
   */
  manager: "Manager",

  /**
   * value: "Co-managing partner"
   * @const
   */
  coManagingPartner: "Co-managing partner",

  /**
   * value: "Managing director"
   * @const
   */
  managingDirector: "Managing director",

  /**
   * value: "Managing director not administrator"
   * @const
   */
  managingDirectorNotAdministrator: "Managing director not administrator",

  /**
   * value: "Unique managing director"
   * @const
   */
  uniqueManagingDirector: "Unique managing director",

  /**
   * value: "Delegated managing director"
   * @const
   */
  delegatedManagingDirector: "Delegated managing director",

  /**
   * value: "Vice-president"
   * @const
   */
  vicePresident: "Vice-president",

  /**
   * value: "Administrator"
   * @const
   */
  administrator: "Administrator",

  /**
   * value: "Delegated administrator"
   * @const
   */
  delegatedAdministrator: "Delegated administrator",

  /**
   * value: "President of the management board"
   * @const
   */
  presidentOfTheManagementBoard: "President of the management board",

  /**
   * value: "President of the supervisory council"
   * @const
   */
  presidentOfTheSupervisoryCouncil: "President of the supervisory council",

  /**
   * value: "Active partner"
   * @const
   */
  activePartner: "Active partner",

  /**
   * value: "Management controller"
   * @const
   */
  managementController: "Management controller",

  /**
   * value: "Liquidator"
   * @const
   */
  liquidator: "Liquidator",

  /**
   * value: "Temporary administrator"
   * @const
   */
  temporaryAdministrator: "Temporary administrator",

  /**
   * value: "Representative in France of a foreign company"
   * @const
   */
  representativeInFranceOfAForeignCompany: "Representative in France of a foreign company",

  /**
   * value: "Personal business manager"
   * @const
   */
  personalBusinessManager: "Personal business manager"
};
/**
 * Representative's position in company
 * @member {module:model/InlineResponse2005Users.ParentTypeEnum} parentType
 */
InlineResponse2005Users.prototype.parentType = undefined;

